
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  price: 'price',
  short_description: 'short_description',
  description: 'description',
  category: 'category',
  tags: 'tags',
  sku: 'sku',
  weight: 'weight',
  dimensions: 'dimensions',
  color: 'color',
  material: 'material',
  image: 'image',
  rating: 'rating',
  qty: 'qty'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  total: 'total',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.Order_itemsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  price: 'price'
};

exports.Prisma.CartsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.Cart_itemsScalarFieldEnum = {
  id: 'id',
  cart_id: 'cart_id',
  product_id: 'product_id',
  quantity: 'quantity'
};

exports.Prisma.WishlistsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  product_id: 'product_id'
};

exports.Prisma.AddressesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  address: 'address',
  city: 'city',
  state: 'state',
  zip_code: 'zip_code',
  country: 'country'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  users: 'users',
  products: 'products',
  orders: 'orders',
  order_items: 'order_items',
  carts: 'carts',
  cart_items: 'cart_items',
  wishlists: 'wishlists',
  addresses: 'addresses'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/sameer/Downloads/Depot-mern/server/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/sameer/Downloads/Depot-mern/server/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel users {\n  id       Int    @id @default(autoincrement())\n  name     String @unique\n  email    String @unique\n  password String\n\n  orders    orders[]\n  cart      carts?\n  wishlists wishlists[]\n  addresses addresses[]\n\n  @@map(\"users\")\n}\n\nmodel products {\n  id                Int      @id @default(autoincrement())\n  title             String\n  price             Float\n  short_description String\n  description       String\n  category          String\n  tags              String[]\n  sku               String   @unique\n  weight            String\n  dimensions        String\n  color             String\n  material          String\n  image             String\n  rating            Float\n  qty               Int\n\n  order_items order_items[]\n  cart_items  cart_items[]\n  wishlists   wishlists[]\n\n  @@map(\"products\")\n}\n\nmodel orders {\n  id         Int      @id @default(autoincrement())\n  user_id    Int\n  total      Float\n  status     String   @default(\"pending\")\n  created_at DateTime @default(now())\n\n  user        users         @relation(fields: [user_id], references: [id])\n  order_items order_items[]\n\n  @@map(\"orders\")\n}\n\nmodel order_items {\n  id         Int   @id @default(autoincrement())\n  order_id   Int\n  product_id Int\n  quantity   Int\n  price      Float\n\n  order   orders   @relation(fields: [order_id], references: [id])\n  product products @relation(fields: [product_id], references: [id])\n\n  @@map(\"order_items\")\n}\n\nmodel carts {\n  id         Int      @id @default(autoincrement())\n  user_id    Int      @unique\n  created_at DateTime @default(now())\n\n  user       users        @relation(fields: [user_id], references: [id])\n  cart_items cart_items[]\n\n  @@map(\"carts\")\n}\n\nmodel cart_items {\n  id         Int @id @default(autoincrement())\n  cart_id    Int\n  product_id Int\n  quantity   Int\n\n  cart    carts    @relation(fields: [cart_id], references: [id])\n  product products @relation(fields: [product_id], references: [id])\n\n  @@map(\"cart_items\")\n}\n\nmodel wishlists {\n  id         Int @id @default(autoincrement())\n  user_id    Int\n  product_id Int\n\n  user    users    @relation(fields: [user_id], references: [id])\n  product products @relation(fields: [product_id], references: [id])\n\n  @@map(\"wishlists\")\n}\n\nmodel addresses {\n  id       Int    @id @default(autoincrement())\n  user_id  Int\n  address  String\n  city     String\n  state    String\n  zip_code String\n  country  String\n\n  user users @relation(fields: [user_id], references: [id])\n\n  @@map(\"addresses\")\n}\n",
  "inlineSchemaHash": "762e617eea2c8a77bdc3c826122a60a04ab758c8c703a096bc96a5ba53ed7068",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"orders\",\"relationName\":\"ordersTousers\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"carts\",\"relationName\":\"cartsTousers\"},{\"name\":\"wishlists\",\"kind\":\"object\",\"type\":\"wishlists\",\"relationName\":\"usersTowishlists\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"addresses\",\"relationName\":\"addressesTousers\"}],\"dbName\":\"users\"},\"products\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"short_description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dimensions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"material\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_items\",\"kind\":\"object\",\"type\":\"order_items\",\"relationName\":\"order_itemsToproducts\"},{\"name\":\"cart_items\",\"kind\":\"object\",\"type\":\"cart_items\",\"relationName\":\"cart_itemsToproducts\"},{\"name\":\"wishlists\",\"kind\":\"object\",\"type\":\"wishlists\",\"relationName\":\"productsTowishlists\"}],\"dbName\":\"products\"},\"orders\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"ordersTousers\"},{\"name\":\"order_items\",\"kind\":\"object\",\"type\":\"order_items\",\"relationName\":\"order_itemsToorders\"}],\"dbName\":\"orders\"},\"order_items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"orders\",\"relationName\":\"order_itemsToorders\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"order_itemsToproducts\"}],\"dbName\":\"order_items\"},\"carts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"cartsTousers\"},{\"name\":\"cart_items\",\"kind\":\"object\",\"type\":\"cart_items\",\"relationName\":\"cart_itemsTocarts\"}],\"dbName\":\"carts\"},\"cart_items\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cart_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"carts\",\"relationName\":\"cart_itemsTocarts\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"cart_itemsToproducts\"}],\"dbName\":\"cart_items\"},\"wishlists\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"usersTowishlists\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"products\",\"relationName\":\"productsTowishlists\"}],\"dbName\":\"wishlists\"},\"addresses\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zip_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"addressesTousers\"}],\"dbName\":\"addresses\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

